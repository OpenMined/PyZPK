name: Tests

on:
  push:
    branches:
    - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ ubuntu-latest, macos-latest]
        python-version: [3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1.1.2
      id: cache-reqs
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements*.txt') }}
    - name: Install dependencies

      run:    |
        if [ ${{ matrix.os }} == ubuntu-latest ]
        then
            sudo apt-get update
            python -m pip install --upgrade pip
            hash -r
            pip3 install -r requirements.txt
            pip3 install -r requirements_dev.txt
            python3 setup.py install
        elif [ ${{ matrix.os }} == macos-latest ]
        then
            brew update
            python -m pip install --upgrade pip
            hash -r
            pip3 install -r requirements.txt
            pip3 install -r requirements_dev.txt
            python3 setup.py install
        else
            exit 1
        fi
      shell: bash
    - name: Lint, format, and type-check
      run: |
        pip3 install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Scan for security issues
      run: |
            bandit -r syft -ll
    - name: Run tests
      run: |
        coverage run -m pytest test
