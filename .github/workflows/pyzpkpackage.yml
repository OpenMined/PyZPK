# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PyZPK CI

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest']
        python-version: [3.5, 3.6, 3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == ubuntu-latest ]
          then
              sudo apt-get update
              python -m pip install --upgrade pip
              hash -r
              pip3 install -r requirements.txt
              pip3 install -r requirements_dev.txt
              python3 setup.py install
          elif [ ${{ matrix.os }} == macos-latest ]
          then
              brew update
              python -m pip install --upgrade pip
              hash -r
              pip3 install -r requirements.txt
              pip3 install -r requirements_dev.txt
              python3 setup.py install
          else
              exit 1
          fi
        shell: bash
      - name: Lint, format, and type-check
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          flake8 test
      - name: Building Library
        run: |
          if [ ${{ matrix.os }} == ubuntu-latest ]
          then
              chmod 557 build.sh
              ./build.sh
          elif [ ${{ matrix.os }} == macos-latest ]
          then
              chmod 557 build_MacOS.sh
              ./build_MacOS.sh
          else
              exit 1
          fi
      - name: Scan for security issues
        run: |
          bandit -r syft -ll
      - name: Run tests
        run: |
          coverage run -m pytest test
